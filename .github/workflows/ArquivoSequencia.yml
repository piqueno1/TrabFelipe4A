name: Steps em SequÃªncia 

on:
  push:
    branches: [ "main" ]
  
  schedule:
    - cron: "0 0-6 * * *"   # janela noturna (UTC 00..06)
    - cron: "0 8 * * 6"     # sÃ¡bado 08:00 UTC
    - cron: "0 3 * * *"     # 03:00 UTC (meia-noite SP) â€“ para contagem diÃ¡ria

permissions:
  contents: write  # para o step que cria/commita arquivo

jobs:
  tudo_em_sequencia:
    runs-on: ubuntu-latest

    steps:
     
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: Hello World
        run: echo "Hello, world!"

    
      - name: Exibir data do push 
        run: |
          TS="${{ github.event.head_commit.timestamp }}"
          date -u -d "${TS:-now}" +%F || date -u +%F

      - name: Exibir hora do push 
        run: |
          python -c "import datetime; print(datetime.datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S UTC'))"

      - name: Mostrar usuÃ¡rio do push
        run: |
          echo "O usuÃ¡rio que fez o push foi: ${{ github.event.pusher.name }}"
          
      - name: Calcular e exibir 2+2
        run: |
          RESULTADO=$((2+2))
          echo "O resultado de 2+2 Ã©: $RESULTADO"

      - name: Listar arquivos 
        run: |
         echo "listando os arquivos"
          ls -la
          # -la mostra arquivos ocultos

      - name: Contar arquivos na raiz
        run: |
          # conta apenas arquivos regulares no diretÃ³rio atual (inclui ocultos)
          find . -maxdepth 1 -type f | wc -l
      - name: Contar arquivos recursivamente
        run: |
          find . -type f | wc -l

      - name: Criar arquivo com informaÃ§Ãµes
        run: |
         {
            echo "ðŸ‘‹ Push por: ${{ github.actor }}"
            echo "ðŸ“… Data (UTC): $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            echo "ðŸŒ¿ Branch: ${{ github.ref_name }}"
          } > readme.txt
          echo "------ readme.txt ------"
          cat readme.txt
          
      - name: Commitar e enviar o arquivo
        run: |
         git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add readme.txt
          git commit -m "Arquivo automÃ¡tico com dados"
          git push

      - name: Checar se estÃ¡ noite 
        id: check_time
        shell: bash
        run: |
          current_hour_utc=$(date -u +%H)   # Pega a HORA atual em UTC (00..23)
          if [[ "$current_hour_utc" -ge 0 && "$current_hour_utc" -le 6 ]]; then
            echo "is_night=true"  >> "$GITHUB_OUTPUT"   
          else
            echo "is_night=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Executar tarefas noturnas (quando for noite)
        if: steps.check_time.outputs.is_night == 'true'
        run: echo "Rodando tarefas noturnas..."

      - name: Rodar apenas aos sÃ¡bados 
        run: |
          H=$(date -u +%H)
          DOW=$(date -u +%u) # 6 = sÃ¡bado
          if [[ "$DOW" -eq 6 && "$H" -eq 8 ]]; then
            echo "SÃ¡bado 08:00 UTC. Executando tarefa de sÃ¡bado..."
          else
            echo "Fora da janela de sÃ¡bado 08:00 UTC."
          fi

      
      - name: Avisar se houver arquivos >100KB 
        run: |
          TH=102400
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch origin "${{ github.base_ref }}" --depth=1 || true
            BASE="origin/${{ github.base_ref }}"
          else
            BASE="$(git rev-parse HEAD^ || echo '')"
          fi

          if [ -n "$BASE" ]; then
            git diff --name-only --diff-filter=AM -z "$BASE"...HEAD \
            | xargs -0 -r -I{} bash -c '
                [ -f "{}" ] || exit 0
                s=$(wc -c < "{}")
                [ "$s" -le '"$TH"' ] || echo "::warning file={},title=Arquivo grande::{} tem $(( (s+1023)/1024 )) KB (>100 KB)"
              '
          else
            echo "Sem BASE (primeiro commit) â€” varrendo HEAD inteiroâ€¦"
            git ls-tree -r --name-only HEAD -z \
            | xargs -0 -r -I{} bash -c '
                [ -f "{}" ] || exit 0
                s=$(wc -c < "{}")
                [ "$s" -le '"$TH"' ] || echo "::warning file={},title=Arquivo grande::{} tem $(( (s+1023)/1024 )) KB (>100 KB)"
              '
          fi

      - name: Contar arquivos (meia-noite SP simulada Ã s 03:00 UTC)
        run: |
          HUTC=$(date -u +%H)
          if [ "$HUTC" -eq 3 ]; then
            HTML=$(find . -type f -name "*.html" | wc -l)
            CSS=$(find  . -type f -name "*.css"  | wc -l)
            JS=$(find   . -type f -name "*.js"   | wc -l)
            TOTAL=$(find . -type f | wc -l)
            echo "::notice title=Contagem diÃ¡ria SP::HTML=$HTML CSS=$CSS JS=$JS TOTAL=$TOTAL"
          else
            echo "NÃ£o Ã© 03:00 UTC. Skip da rotina de meia-noite SP."
          fi
